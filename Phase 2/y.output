Terminals unused in grammar

   RESERVED
   REAL
   INTEGER
   OP1
   OP2
   OP3
   OP4
   STRING


Grammar

    0 $accept: Prog $end

    1 Prog: ProgHeading ";" ProgBlock "."

    2 ProgHeading: "program" ID "(output)"

    3 ProgBlock: VarPart FuncPart StatPart

    4 VarPart: "var" VarDeclaration ";" VarDeclarationRepeat
    5        | %empty

    6 VarDeclarationRepeat: VarDeclarationRepeat VarDeclaration ";"
    7                     | %empty

    8 VarDeclaration: IDList ":" ID

    9 IDList: ID IDListRepeat

   10 IDListRepeat: IDListRepeat "," ID
   11             | %empty

   12 StatPart: %empty

   13 FuncPart: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
RESERVED (258)
REAL (259)
INTEGER (260)
OP1 (261)
OP2 (262)
OP3 (263)
OP4 (264)
ID (265) 2 8 9 10
STRING (266)
";" (267) 1 4 6
"." (268) 1
"program" (269) 2
"(output)" (270) 2
"var" (271) 4
":" (272) 8
"," (273) 10


Nonterminals, with rules where they appear

$accept (19)
    on left: 0
Prog (20)
    on left: 1, on right: 0
ProgHeading (21)
    on left: 2, on right: 1
ProgBlock (22)
    on left: 3, on right: 1
VarPart (23)
    on left: 4 5, on right: 3
VarDeclarationRepeat (24)
    on left: 6 7, on right: 4 6
VarDeclaration (25)
    on left: 8, on right: 4 6
IDList (26)
    on left: 9, on right: 8
IDListRepeat (27)
    on left: 10 11, on right: 9 10
StatPart (28)
    on left: 12, on right: 3
FuncPart (29)
    on left: 13, on right: 3


State 0

    0 $accept: . Prog $end

    "program"  shift, and go to state 1

    Prog         go to state 2
    ProgHeading  go to state 3


State 1

    2 ProgHeading: "program" . ID "(output)"

    ID  shift, and go to state 4


State 2

    0 $accept: Prog . $end

    $end  shift, and go to state 5


State 3

    1 Prog: ProgHeading . ";" ProgBlock "."

    ";"  shift, and go to state 6


State 4

    2 ProgHeading: "program" ID . "(output)"

    "(output)"  shift, and go to state 7


State 5

    0 $accept: Prog $end .

    $default  accept


State 6

    1 Prog: ProgHeading ";" . ProgBlock "."

    "var"  shift, and go to state 8

    $default  reduce using rule 5 (VarPart)

    ProgBlock  go to state 9
    VarPart    go to state 10


State 7

    2 ProgHeading: "program" ID "(output)" .

    $default  reduce using rule 2 (ProgHeading)


State 8

    4 VarPart: "var" . VarDeclaration ";" VarDeclarationRepeat

    ID  shift, and go to state 11

    VarDeclaration  go to state 12
    IDList          go to state 13


State 9

    1 Prog: ProgHeading ";" ProgBlock . "."

    "."  shift, and go to state 14


State 10

    3 ProgBlock: VarPart . FuncPart StatPart

    $default  reduce using rule 13 (FuncPart)

    FuncPart  go to state 15


State 11

    9 IDList: ID . IDListRepeat

    $default  reduce using rule 11 (IDListRepeat)

    IDListRepeat  go to state 16


State 12

    4 VarPart: "var" VarDeclaration . ";" VarDeclarationRepeat

    ";"  shift, and go to state 17


State 13

    8 VarDeclaration: IDList . ":" ID

    ":"  shift, and go to state 18


State 14

    1 Prog: ProgHeading ";" ProgBlock "." .

    $default  reduce using rule 1 (Prog)


State 15

    3 ProgBlock: VarPart FuncPart . StatPart

    $default  reduce using rule 12 (StatPart)

    StatPart  go to state 19


State 16

    9 IDList: ID IDListRepeat .
   10 IDListRepeat: IDListRepeat . "," ID

    ","  shift, and go to state 20

    $default  reduce using rule 9 (IDList)


State 17

    4 VarPart: "var" VarDeclaration ";" . VarDeclarationRepeat

    $default  reduce using rule 7 (VarDeclarationRepeat)

    VarDeclarationRepeat  go to state 21


State 18

    8 VarDeclaration: IDList ":" . ID

    ID  shift, and go to state 22


State 19

    3 ProgBlock: VarPart FuncPart StatPart .

    $default  reduce using rule 3 (ProgBlock)


State 20

   10 IDListRepeat: IDListRepeat "," . ID

    ID  shift, and go to state 23


State 21

    4 VarPart: "var" VarDeclaration ";" VarDeclarationRepeat .
    6 VarDeclarationRepeat: VarDeclarationRepeat . VarDeclaration ";"

    ID  shift, and go to state 11

    $default  reduce using rule 4 (VarPart)

    VarDeclaration  go to state 24
    IDList          go to state 13


State 22

    8 VarDeclaration: IDList ":" ID .

    $default  reduce using rule 8 (VarDeclaration)


State 23

   10 IDListRepeat: IDListRepeat "," ID .

    $default  reduce using rule 10 (IDListRepeat)


State 24

    6 VarDeclarationRepeat: VarDeclarationRepeat VarDeclaration . ";"

    ";"  shift, and go to state 25


State 25

    6 VarDeclarationRepeat: VarDeclarationRepeat VarDeclaration ";" .

    $default  reduce using rule 6 (VarDeclarationRepeat)
